{
	"name": "run-a-code",
	"displayName": "Run!",
	"description": "Run any code instantly from your editor. One click. Any language. Minimal setup.",
	"version": "0.4.0",
	"publisher": "Danbh",
	"author": "Danbh",
	"repository": {
		"type": "git",
		"url": "https://github.com/dabbh/Run"
	},
	"homepage": "https://dabbh.github.io/",
	"bugs": {
		"url": "https://github.com/dabbh/Run/issues"
	},
	"engines": {
		"vscode": "^1.101.0"
	},
	"icon": "icon.png",
	"license": "MIT",
	"categories": [
		"Other"
	],
	"keywords": [
		"run code",
		"execute",
		"script",
		"python",
		"java",
		"javascript",
		"typescript",
		"go",
		"rust",
		"php",
		"ruby",
		"c#",
		"dart",
		"latex",
		"tex",
		"runner",
		"code runner",
		"terminal",
		"run in terminal",
		"compiler",
		"interpreter",
		"Run",
		"Run!"
	],
	"activationEvents": [
		"onLanguage:c",
		"onLanguage:cpp",
		"onLanguage:python",
		"onLanguage:java",
		"onLanguage:javascript",
		"onLanguage:typescript",
		"onLanguage:go",
		"onLanguage:rust",
		"onLanguage:php",
		"onLanguage:ruby",
		"onLanguage:csharp",
		"onLanguage:dart",
		"onLanguage:latex"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "coderunner.runFile",
				"title": "Run!: Run Code",
				"icon": "$(play)"
			},
			{
				"command": "coderunner.createRunFile",
				"title": "Run!: Create .Run File",
				"icon": "$(new-file)"
			},
			{
				"command": "coderunner.openRunFile",
				"title": "Run!: Open .Run File",
				"icon": "$(go-to-file)"
			},
			{
				"command": "coderunner.createGlobalRunFile",
				"title": "Run!: Create Global .Run File",
				"icon": "$(globe)"
			},
			{
				"command": "coderunner.editGlobalRunFile",
				"title": "Run!: Edit Global .Run File",
				"icon": "$(edit)"
			},
			{
				"command": "coderunner.showWalkthrough",
				"title": "Run!: Getting Started Tutorial",
				"icon": "$(mortar-board)"
			}
		],
		"walkthroughs": [
			{
				"id": "run.gettingStarted",
				"title": "Getting Started with Run!",
				"description": "Learn how to run code instantly with Run! extension",
				"steps": [
					{
						"id": "run.firstRun",
						"title": "Run Your First Code",
						"description": "Open any supported code file and click the Run button in the status bar to execute it instantly.\n[Open a code file](command:workbench.action.files.openFile)",
						"media": {
							"image": "icon.png",
							"altText": "Run button in status bar"
						},
						"completionEvents": ["onCommand:coderunner.runFile"]
					},
					{
						"id": "run.createRunFile",
						"title": "Create Custom .Run Configuration",
						"description": "Create a .Run file to customize compilation flags and run commands for your project.\n[Create .Run File](command:coderunner.createRunFile)",
						"media": {
							"image": "icon.png",
							"altText": "Custom .Run configuration"
						},
						"completionEvents": ["onCommand:coderunner.createRunFile"]
					},
					{
						"id": "run.globalSettings",
						"title": "Set Up Global Configuration",
						"description": "Create a global .Run file to apply settings across all your projects.\n[Create Global .Run File](command:coderunner.createGlobalRunFile)",
						"media": {
							"image": "icon.png",
							"altText": "Global configuration"
						},
						"completionEvents": ["onCommand:coderunner.createGlobalRunFile"]
					},
					{
						"id": "run.safeMode",
						"title": "Understanding Safe Mode",
						"description": "Run! uses safe mode by default to create temporary executables and avoid file conflicts. This keeps your workspace clean!",
						"media": {
							"image": "icon.png",
							"altText": "Safe mode explanation"
						}
					},
					{
						"id": "run.multiLanguage",
						"title": "Multi-Language Support",
						"description": "Run! supports 13+ programming languages including C, C++, Python, Java, JavaScript, Go, Rust, and more. Each language has optimized default settings.",
						"media": {
							"image": "icon.png",
							"altText": "Multiple programming languages"
						}
					}
				]
			}
		],
		"languages": [
			{
				"id": "c"
			},
			{
				"id": "cpp"
			},
			{
				"id": "python"
			},
			{
				"id": "java"
			},
			{
				"id": "javascript"
			},
			{
				"id": "typescript"
			},
			{
				"id": "go"
			},
			{
				"id": "rust"
			},
			{
				"id": "php"
			},
			{
				"id": "ruby"
			},
			{
				"id": "csharp"
			},
			{
				"id": "dart"
			},
			{
				"id": "latex"
			},
			{
				"id": "runfile",
				"aliases": [
					"Run Configuration",
					"runfile"
				],
				"extensions": [
					".Run"
				],
				"filenames": [
					".Run",
					"global.Run"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "runfile",
				"scopeName": "source.runfile",
				"path": "./syntaxes/runfile.tmLanguage.json"
			}
		],
		"configurationDefaults": {
			"[runfile]": {
				"editor.quickSuggestions": {
					"other": true,
					"comments": false,
					"strings": true
				},
				"editor.suggestOnTriggerCharacters": true,
				"editor.wordBasedSuggestions": "off"
			}
		},
		"keybindings": [
			{
				"command": "coderunner.runFile",
				"key": "ctrl+cmd+r",
				"mac": "ctrl+cmd+r",
				"when": "editorTextFocus && (resourceExtname == '.py' || resourceExtname == '.java' || resourceExtname == '.c' || resourceExtname == '.cpp' || resourceExtname == '.js' || resourceExtname == '.ts' || resourceExtname == '.go' || resourceExtname == '.rs' || resourceExtname == '.php' || resourceExtname == '.rb' || resourceExtname == '.cs' || resourceExtname == '.dart' || resourceExtname == '.tex')"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src",
		"test": "vscode-test"
	},
	"devDependencies": {
		"@types/vscode": "^1.101.0",
		"@types/mocha": "^10.0.10",
		"@types/node": "20.x",
		"@typescript-eslint/eslint-plugin": "^8.31.1",
		"@typescript-eslint/parser": "^8.31.1",
		"eslint": "^9.25.1",
		"typescript": "^5.8.3",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.5.2"
	}
}